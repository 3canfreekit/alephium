alephium {
  broker {
    groups = 3
    broker-num = 3
    broker-id = 0
  }

  consensus {
    tips-prune-interval = 2
    block-cache-capacity-per-chain = 4
  }

  mining {
    api-interface = "127.0.0.1"
    nonce-step = 400
    batch-delay = 50 milli
    polling-interval = 2 seconds
  }

  network {
    network-id = 2

    max-outbound-connections-per-group = 10
    max-inbound-connections-per-group = 40

    ping-frequency = 300 second
    retry-timeout = 10 second
    ban-duration = 1 day
    penalty-forgiveness = 1 hour
    penalty-frequency = 10 second
    connection-buffer-capacity-in-byte = 100000000

    fast-sync-frequency = 2 second
    stable-sync-frequency = 20 second
    sync-cleanup-frequency = 10 second
    sync-expiry-period = 10 second
    update-synced-frequency = 5 second

    upnp {
      enabled = false
    }

    bind-address = "127.0.0.1:9973"
    external-address = "127.0.0.1:9973"
    internal-address = "127.0.0.1:9973"
    coordinator-address = "127.0.0.1:9972"
    num-of-sync-blocks-limit = 4

    rest-port = 12973
    ws-port = 11973
    miner-api-port = 10973
  }

  discovery {
    bootstrap = []
    bootstrap = ${?BOOTSTRAP}

    scan-frequency = 90.seconds
    scan-fast-frequency = 5.seconds
    fast-scan-period = 1 minute
    neighbors-per-group = 20
  }

  api {
    network-interface = "127.0.0.1"
    blockflow-fetch-max-age = 30 minutes
    ask-timeout = 5 seconds
    api-key = null
  }

  mempool {
    shared-pool-capacity = 1000
    pending-pool-capacity = 1000
    tx-max-number-per-block = 1000
    clean-frequency = 10 minutes
  }

  wallet {
    port = 15973
    secret-dir = ""
    locking-timeout = 10 minutes
  }

  node {
    db-sync-write = true
  }
}

akka {
  actor {
    mining-dispatcher {
      type = Dispatcher
      executor = "fork-join-executor"
      fork-join-executor {
        parallelism-min = 1
        parallelism-factor = 0.5
      }
      throughput = 1
    }
  }

  http {
    server {
      websocket {
        periodic-keep-alive-mode = pong
        periodic-keep-alive-max-idle = 30 seconds
      }

      socket-options {
        so-reuse-address = true
      }
    }
  }
}
